upstream nextcloud {
    server 127.0.0.1:{{ nextcloud_local_port }};
}

server {
	listen 443 ssl http2;
	server_name {{ nextcloud_domain }};
	root /var/www/default/;
	index index.php;
	client_max_body_size 1G;

    location = /robots.txt  { access_log off; log_not_found off; }
    location = /favicon.ico { access_log off; log_not_found off; }
    # Deny access to .htaccess files, if Apache's document root concurs with nginx's one
    location /.ht {
        deny  all;
    }

    # Deny access to hidden dotfiles (beginning with '.')
    location /. {
        deny all;
    }

	access_log  /var/log/nginx/{{ nextcloud_domain }}.access.log combined;
	error_log   /var/log/nginx/{{ nextcloud_domain }}.error.log;

	location / {
        include proxy_params;
        proxy_pass_request_headers      on;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass http://nextcloud;
	}

    # Make a regex exception for `/.well-known` so that clients can still
    # access it despite the existence of the regex rule
    # `location ~ /(\.|autotest|...)` which would otherwise handle requests
    # for `/.well-known`.
    location ^~ /.well-known {
        # The rules in this block are an adaptation of the rules
        # in `.htaccess` that concern `/.well-known`.

        location = /.well-known/carddav { return 301 /remote.php/dav/; }
        location = /.well-known/caldav  { return 301 /remote.php/dav/; }
        #location = /.well-known/webfinger  { return 301 /public.php?service=webfinger; }

        location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
        location /.well-known/pki-validation    { try_files $uri $uri/ =404; }

        # Anything else is dynamically handled by Nextcloud
        location ^~ /.well-known            { return 301 $scheme://$host/index.php$uri$is_args$args; }

        try_files $uri $uri/ =404;
    }


    # https://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox/
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 9.9.9.9;

    # https://ssl-config.mozilla.org/#server=nginx&version=1.14.2&config=modern&openssl=1.1.1d&hsts=false&guideline=5.6
    ssl_certificate         /etc/letsencrypt/live/{{ nextcloud_domain }}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/{{ nextcloud_domain }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ nextcloud_domain }}/chain.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # modern configuration
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers off;

}

server {
	listen 80;
	server_name {{ nextcloud_domain }};
	return 301 https://$host$request_uri;
}
